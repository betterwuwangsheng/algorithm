#include <bits/stdc++.h>

using namespace std;

/**
单点时限: 2.0 sec

内存限制: 256 MB

有 N 个 1 到 1000 之间的整数，对于其中重复的数，只保留一个，把其余相同的数去掉。然后再按照个位数字进行升序排序，如果个位数字相同，则小的数排在前面。

输入格式
第  行：整数  () 为问题数。

第  ~  行：每一个问题两行，第一行整数个数 ，第二行  个用一个空格分隔的正整数。

输出格式
对于每个问题，输出一行问题的编号（ 开始编号，格式：case #0: 等），然后在一行中输出经去重和排序后的正整数，两个数之间用一个空格分隔。最后一个数后没有空格。行末尾输出一个换行符。

样例
input
2
10
20 40 32 67 40 20 89 300 400 15
18
2 1 2 1 2 1 2 1 20 20 40 32 67 40 89 300 400 15
output
case #0:
20 40 300 400 32 15 67 89
case #1:
20 40 300 400 1 2 32 15 67 89
*/

int a[1009];

bool cmp(int x, int y) {

    //获得各位数字
    int a = x % 10;
    int b = y % 10;

    //各位数字相等
    if(a == b)
        //小的数字在前
        return x < y;

    //各位数字不同，升序
    return a < b;
}
int main() {
    int T,n,i;
    scanf("%d", &T);

    for(int cnt = 0; cnt < T; cnt++) {
        scanf("%d", &n);
        for(i = 0; i < n; i++) {
            scanf("%d", &a[i]);
        }
        sort(a,a + n,cmp);

        printf("case #%d:\n", cnt);
        for(i = 0; i < n - 1; i++) {

            //相邻元素相同不输出
            if(a[i] != a[i + 1])
                printf("%d ", a[i]);
            }

        //最后一个数后没有空格。行末尾输出一个换行符。
        printf("%d\n", a[n - 1]);
    }
    return 0;
}
